html,
body {
  height: 100vh;
  width: 100%;
  padding: 0;
  margin: 0;
  font-family: 'Helvetica Neue', arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

* {
  box-sizing: border-box;
}

$bg: #480CA8;
$gap: 1rem;
$success: #4CF0A1;
$purple: #B5179E;
$failure: #F72585;
$blue: #4361EE;

#app {
  height: 100%;
  text-align: center;
  background-color: $bg;
  color: #fff;
  display: grid;
  grid-template-rows: 1fr 5fr;
  user-select: none;
}

.title {
  text-transform: uppercase;
  font-weight: bold;
  font-size: 10vw;
}

.content {
  display: grid;
  grid-template-columns: 4fr 1fr;
  gap: $gap;
  padding-inline: $gap;
}

.question {
  display: grid;
  grid-template-rows: 0.5fr 3fr 5fr;
  gap: $gap;
  .info {
    display: flex;
    flex-direction: row;
    gap: $gap;
    .category {
      flex: 2 1 auto;
      padding: 0.5rem 0;
      background-color: $purple;
    }
    .diff {
      padding: 0.5rem 1rem;
      background-color: $success;
    }
  }
  .question-text {
    background-color: $purple;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .answers {
    display: grid;
    grid-template-columns: 1fr 1fr;
    // place-items: center;
    gap: 50px;
    padding: 20px;
    .answer {
      padding: 1rem 2rem;
      background-color: $blue;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      &:hover {
        filter: brightness(1.1);
      }
      &:active {
        filter: brightness(0.8);
      }
    }
    .correct {
      background-color: $success;
    }
    .wrong {
      background-color: $failure;
    }
  }
}

.question-list {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background-color: $purple;
  .question-item {  
    flex: 2 1 auto;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .current {
    background-color: rgba(white, 0.2);
  }
  .previous {
    background-color: rgba(white, 0.1);
  }
}

.rounded {
  border-radius: 10px;
}

.loading {
  background-color: rgba($purple, 0.2);
  display: grid;
  position: relative;
  place-items: center;
  &::before {
    content: "";
    aspect-ratio: 1 / 1;
    border-radius: 50%;
    width: 10%;
    border: 5px solid transparent;
    border-left-color: $success;
    animation: loop 1s ease infinite;
  }
}

@keyframes loop {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(720deg);
  }
}

